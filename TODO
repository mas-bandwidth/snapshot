DONE

TODO

	Clean up the internal address stuff. I *really* don't think we need it.

	-------------

	Setup a loopback.cpp example

	-------------

	Get network simulator test working with loopback

	Get network simulator test working with ipv4 sockets

	Get network simulator test working with ipv6 sockets

	-------------

	Apply network simulator to remainder of non-socket client server tests, this makes them more reliable across platforms.

	-------------











	-------------

	Test on linux

	-------------

	Test on windows

	-------------

	Bring back the console platforms

	-------------

	Verify that we can compile for consoles -- probably need to setup some platform specific projects per-platform like with next SDK

	-------------

	Clean up pass before I go any further

	-------------

























	---------------------------

	Incorporate reliable.io source code

	Update license to include netcode.io source code

	Integrate reliable so we have packet fragmentation and re-assembly, and sequence numbers and acks.

	---------------------------	

	Now think what are the essential other things?

	A reliable-ordered channel with messages, bidirectional between client and server. For sure.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Unreliable messages stuck at the back of the packets (when there is room) for sound effects, visual fx etc...

	Player commands with input and dt sent redundantly all unacked.

	Choke.

	Server loop w. tick rate.

	Server sim objects step forward together.

	Player owned objects advanced forward with player command dt as they arrive.

	Schema

	What sort of properties are needed?

	Send uncompressed snapshots down.

	Send delta compressed snapshots down.

	---------------------------
