DONE

	Calculate the allowed packets once on create

	Bring back the buffers needed for receiving packets from simulator

	Get snapshot_client.cpp network simulator receive packets code back up

	Work out how to prefix the packet data with the payload packet struct, eg. need offsetof(type, member)

	Get the payload packet test working

	Bring across netcode server as snapshot_server_t

TODO

	Bring across the connect token manager, it's needed by the server

	Fix up the commented out functions in snapshot_server.cpp

	-------------

	Create a client.cpp and server.cpp and add to makefile

	Get the client successfully connecting to the server and exchanging payload packets

	-------------

	Zero copy on payload packet write.

	-------------

	Get the loopback stuff working

	-------------

	Get the network simulator working

	-------------


























	---------------------------

	Incorporate reliable.io source code

	Update license to include netcode.io source code

	Integrate reliable so we have packet fragmentation and re-assembly, and sequence numbers and acks.

	---------------------------

	Verify tests pass on linux.

	Verify tests pass on windows.

	---------------------------	

	Now think what are the essential other things?

	A reliable-ordered channel with messages, bidirectional between client and server. For sure.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Unreliable messages stuck at the back of the packets (when there is room) for sound effects, visual fx etc...

	Choke.

	Server loop w. tick rate.

	Server sim objects step forward together.

	Player commands with input and dt sent redundantly all unacked.

	Schema

	What sort of properties are needed?

	Send uncompressed snapshots down.

	Send delta compressed snapshots down.

	---------------------------
