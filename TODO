DONE

	Bring across xboxone testbed

	Bring across seriesx testbed (gdk)

	(Need to update to latest QFE on my PC to get seriesX working... punting for now)

	a3c505d1f49a0a6ca0b6fe64e31f931638337fc62db6c1df00e0c68f675a7f056594254b86eea6c0

	Setup custom semaphore agent on windows PC

	Setup windows tests to build and run on semaphore via custom agent

	Debugging git on windows custom agent...

	Debugging stupid fucking powershell...

	Setup console testbeds to build and link on semaphore via custom agent

	Setup semaphore with env vars

	Update license to include reliable.io source code

	Hack in sequence buffer.

	Split sequence buffer into .h/.cpp

	Bring across sequence buffer test

	Bring across endpoint

	Bring across fragmentation stuff

	Bring across more fragmentation stuff... move into snapshot_fragment.h

	Get the remaining reliable tests compiling and passing.

	Split snapshot_endpoint.h into .h and cpp

	Work out the last // todo around the 256 sized array

TODO

	Update testbeds with new files so they pass again.

	-------------

	Integrate endpoint with client.

	Integrate endpoint with server.

	Implement a test that verifies we get payload packets exchanged between client and server.

	-------------

	Download UE5.

	Setup a snapshot UE5 plugin based on the network next UE4 plugin.

	Verify client and server can connect and operate in testbed.

	-------------

	Update to latest PS4/PS5 tooling

	Update to latest XBox Series X and GDK tooling

	Get series x testbed working

	Update to latest Nintendo Switch tooling

	-------------

	Setup additional PCs as build farm for sem

	-------------

	Now think what are the essential other things?

	A reliable-ordered channel with messages, bidirectional between client and server. For sure.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Unreliable messages stuck at the back of the packets (when there is room) for sound effects, visual fx etc...

	Player commands with input and dt sent redundantly all unacked.

	Choke.

	Server loop w. tick rate.

	Server sim objects step forward together.

	Player owned objects advanced forward with player command dt as they arrive.

	Schema

	What sort of properties are needed?

	Send uncompressed snapshots down.

	Send delta compressed snapshots down.

	---------------------------
