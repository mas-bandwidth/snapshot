DONE

	Bring across connect token into snapshot_connect_token.h

TODO

	Find corresponding snapshot_crypto_ function to replace "_bignonce"

	Get "test_connect_token" compiling and passing

	-------------

	Bring across challenge token

	-------------

	Bring across packet types and tests

	-------------

	Bring across encryption manager

	-------------

	Bring across replay protection

	-------------

	Bring across client implementation

	Bring across server implementation

	Incorporate netcode server as snapshot_server_t

	Incorporate netcode client as snapshot_client_t

	Create a client.cpp and server.cpp and add to makefile

	Get the client successfully connecting to the server and exchanging packets

	---------------------------

	Incorporate reliable.io source code

	Update license to include netcode.io source code

	Integrate reliable so we have packet fragmentation and re-assembly, and sequence numbers and acks.

	---------------------------

	Verify tests pass on linux.

	Verify tests pass on windows.

	---------------------------	

	Now think what are the essential other things?

	A command channel with messages, bidirectional between client and server. For sure.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Unreliable messages stuck at the back of the packets (when there is room).

	Choke.

	Server loop w. tick rate.

	Server sim objects step forward together.

	Player commands with input and dt sent redundantly all unacked.

	Schema

	What sort of properties are needed?

	Send uncompressed snapshots down.

	---------------------------
