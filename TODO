DONE

	Fix the FSocket thing with TSharedPtr. Use the steam sockets as an example of what to do.

TODO

	Hook up various callbacks inside Unreal for client and server, tracking state changes and printing, tracking connect/disconnect etc.

	*** PAUSING HERE ***

	-------------

	Blocked on devnet access...

	-------------

	Update to latest PS4/PS5 tooling

	-------------

	Verify unit tests run on PS5.

	-------------

	Verify PS5 client runs and connects to windows server.

	-------------


	Build a linux dedicated server version of the SnapshotTest

	-------------

	Verify that I can host a linux dedicated server version of the FPS example in google cloud, and connect to it from windows client.

	-------------

	Verify PS5 client can connect to dedicated linux server in UE5.

	-------------

	*** FIRST MILESTONE: SnapshotNetDriver in UE5, working on PC and PS5 ***

	-------------

























	--------------

	Update to latest XBox Series X and GDK tooling

	Get series x testbed working

	-------------

	Verify series x client in UE4 can connect to linux dedicated server in google cloud.

	-------------

	Remove xboxone target. It's non GDK and no longer supported by microsoft.

	-------------

	Setup additional PCs as build farm for sem

	-------------














	-------------

	A reliable-ordered channel with messages, bidirectional between client and server.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Large snapshot block sent, and if snapshot is too large, it gets thrown inline down the resynchronizing reliable-ordered channel.

	Unreliable messages stuck at the back of the packets (when there is room) for sound effects, visual fx etc...

	Player commands with input and dt sent redundantly all unacked.

	Choke.

	*** SECOND MILESTONE: Low-level protocol is complete ***

	---------------------------

	Schema

	What sort of properties are needed?

	Send delta compressed snapshots down.

	Decompress snapshot deltas on client.

	Drive object creates and deletes.

	---------------------------
