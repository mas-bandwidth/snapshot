DONE

	Extend passthrough with generate/verify packet to make sure content and length are correct.

	Extend passthrough test to IPv6

	Fix up all the process packet todos for loopback client

TODO
    void (*send_loopback_packet_callback)(void*,snapshot_address_t*,uint8_t*,int);

	Fix up all the process packet todos for loopback server

	-------------

	Implement zero copy on payload and passthrough packet writes

	-------------

	Fix up the crypto AEAD todos so they call into official snapshot_crypto_* functions.

	-------------

	Get office cleaned up and PCs setup again with networking

	Setup custom agents on windows machine and build windows

	Probably need to bring across and modify the testbed projects from next SDK

	Setup custom agents on machines and set them up to build console versions

	-------------

	Setup a snapshot UE4 plugin

	-------------



































	---------------------------

	Incorporate reliable.io source code

	Update license to include reliable.io source code

	Integrate reliable so we have packet fragmentation and re-assembly, and sequence numbers and acks.

	---------------------------	

	Now think what are the essential other things?

	A reliable-ordered channel with messages, bidirectional between client and server. For sure.

	The same command channel with in-line large blocks of data sent down (eg. snapshot baselines...)

	Unreliable messages stuck at the back of the packets (when there is room) for sound effects, visual fx etc...

	Player commands with input and dt sent redundantly all unacked.

	Choke.

	Server loop w. tick rate.

	Server sim objects step forward together.

	Player owned objects advanced forward with player command dt as they arrive.

	Schema

	What sort of properties are needed?

	Send uncompressed snapshots down.

	Send delta compressed snapshots down.

	---------------------------
